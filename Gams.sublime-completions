{
        "scope": "source.gms",

        "completions":
        [
//Sets, Parameters, Variables etc.
                { "trigger": "SET name /definition/;", "contents": "SET ${1:setname} /${2:definition}/;" },
                { "trigger": "ALIAS(x,xx);", "contents": "ALIAS ($1,$2);" },
                { "trigger": "SCALAR name //;", "contents": "SCALAR ${1:name} /${2:value}/"},
                { "trigger": "PARAMETER name;", "contents": "PARAMETER $0;"},
                { "trigger": "TABLE name;", "contents": "TABLE ${1:name}\n${2:definition}\n;" },
                { "trigger": "VARIABLE name;", "contents": "VARIABLE ${1:name};" },
                { "trigger": "POSITIVE VARIABLE name;", "contents": "POSITIVE VARIABLE ${1:name};" },
                { "trigger": "INTEGER VARIABLE name;", "contents": "INTEGER VARIABLE ${1:name};" },
                { "trigger": "NEGATIVE VARIABLE name;", "contents": "NEGATIVE VARIABLE ${1:name};" },
                { "trigger": "BINARY VARIABLE name;", "contents": "BINARY VARIABLE ${1:name};" },
                { "trigger": "SOS1 VARIABLE name;", "contents": "SOS1 VARIABLE ${1:name};" },
                { "trigger": "SOS2 VARIABLE name;", "contents": "SOS2 VARIABLE ${1:name};" },
                { "trigger": "SEMICONT VARIABLE name;", "contents": "SEMICONT VARIABLE ${1:name};" },
                { "trigger": "SEMIINT VARIABLE name;", "contents": "SEMIINT VARIABLE ${1:name};" },
//Assignments
                ".lo",
                ".l",
                ".up",
                ".m",
//Model, Equation
                { "trigger": "EQUATIONS eq1,eq2...;", "contents": "EQUATIONS $0;" }, 
                { "trigger": "MODEL name /equations/;", "contents": "MODEL ${1:name} /${2:equations}/;" },
                { "trigger": "OPTION parameter = value;", "contents": "OPTION $1 = $2;" }, 
                { "trigger": "SOLVE model min/max USING modeltype", "contents": "SOLVE ${1:modelname} ${2:minimizing} ${3:variable} USING ${4:modeltype};" },               
                "MINIMIZING",
                "MAXIMIZING",
                "LP",
                "QCP",
                "NLP",
                "DNLP",
                "MIP",
                "RMIP",
                "MIQCP",
                "RMIQCP",
                "MINLP",
                "RMINLP",
                "MCP",
                "MPEC",
                "RMPEC",
                "CNS",
                "EMP",
//SOLVERS
                "ALPHAECP",
                "AMPL",
                "ANTIGONE",
                "BARON",
                "BDMLP",
                "BENCH",
                "BONMIN",
                "BONMINH",
                "CBC",
                "CONOPT",
                "CONVERT",
                "COUENNE",
                "CPLEX",
                "DE",
                "DECIS",
                "DECISC",
                "DECISM",
                "DICOPT",
                "EXAMINER",
                "GAMSCHK",
                "GLOMIQO",
                "GUROBI",
                "IPOPT",
                "IPOPTH",
                "JAMS",
                "KNITRO",
                "LGO",
                "LINDO",
                "LINDOGLOBAL",
                "LINGO",
                "LOGMIP",
                "LS",
                "MILES",
                "MINOS",
                "MOSEK",
                "MPECDUMP",
                "MPSGE",
                "MSNLP",
                "NLPEC",
                "OQNLP",
                "OS",
                "OSICPLEX",
                "OSIGUROBI",
                "OSIMOSEK",
                "OSIMOSEK",
                "OSIXPRESS",
                "OSIXPRESS",
                "PATH",
                "PATHNLP",
                "SBB",
                "SCIP",
                "SNOPT",
                "SOPLEX",
                "SULUM",
                "XA",
                "XPRESS",
//Functions

                { "trigger": "ABS(x)", "contents": "ABS($1)" },
                { "trigger": "ARCCOS(x)", "contents": "ARCCOS($1)" },
                { "trigger": "ARCSIN(x)", "contents": "ARCSIN($1)" },
                { "trigger": "ARCTAN(x)", "contents": "ARCTAN($1)" },
                { "trigger": "ARCTAN2(X,Y)", "contents": "ARCTAN2($1,$2)" },
                { "trigger": "BETA(x,y)", "contents": "BETA($1,$2)" },
                { "trigger": "BETAREG(x,y,z)", "contents": "BETAREG($1,$2,$3)" },
                { "trigger": "BINOMIAL(n,k)", "contents": "BINOMIAL($1,$2)" },
                { "trigger": "CEIL(x)", "contents": "CEIL($1,$2)" },
                { "trigger": "CENTROPY(x,y[,z])", "contents": "CENTROPY($1,$2)" },
                { "trigger": "COS(x)", "contents": "COS($1)" },
                { "trigger": "COSH(x)", "contents": "COSH($1)" },
                { "trigger": "CVPOWER(X,y)", "contents": "cvPower($1,$2)" },
                { "trigger": "DIV(dividend,divisor)", "contents": "DIV($1,$2)" },
                { "trigger": "DIV0(dividend,divisor)", "contents": "DIV0($1,$2)" },
                { "trigger": "EDIST(x1[,x2,x3,x4,x5,x6])", "contents": "EDIST($1,$2)" },
                { "trigger": "ENTROPY(x)", "contents": "ENTROPY($1)" },
                { "trigger": "ERRORF(x)", "contents": "ERRORF($1)" },
                { "trigger": "EXECSEED", "contents": "EXECSEED" },
                { "trigger": "EXP(x)", "contents": "EXP($1)" },
                { "trigger": "FACT(N)", "contents": "FACT($1)" },
                { "trigger": "FLOOR(x)", "contents": "FLOOR($1)" },
                { "trigger": "FRAC(x)", "contents": "FRAC($1)" },
                { "trigger": "GAMMA(x)", "contents": "GAMMA($1)" },
                { "trigger": "GAMMAREG(x,a)", "contents": "EXP($1,$2)" },
                { "trigger": "LOG(x)", "contents": "LOG($1)" },
                { "trigger": "LOG10(x)", "contents": "LOG10($1)" },
                { "trigger": "LOG2(x)", "contents": "LOG2($1)" },
                { "trigger": "LOGBETA(x)", "contents": "LOGBETA($1,$2)" },
                { "trigger": "LOGGAMMA(x)", "contents": "LOGGAMMA($1)" },
                { "trigger": "MAPVAL(x)", "contents": "MAPVAL($1)" },
                { "trigger": "MAX(x1,x2,x3,...)", "contents": "MAX($1,$2)" },
                { "trigger": "MIN(x1,x2,x3,...)", "contents": "MIN($1,$2)" },
                { "trigger": "MOD(x,y)", "contents": "MOD($1,$2)" },
                { "trigger": "NCPCM(x,y,Z)", "contents": "NCPCM($1,$2,$3)" },
                { "trigger": "NCPF(x,y[,Z])", "contents": "NCPCM($1,$2)" },
                { "trigger": "NCPVUPOW(r,s[,MU])", "contents": "NCPVUPOW($1,$2)" },
                { "trigger": "NCPVUSIN(r,s[,MU])", "contents": "NCPVUSIN($1,$2)" },
                { "trigger": "NCPVUSIN(r,s[,MU])", "contents": "NCPVUSIN($1,$2)" },
                { "trigger": "NORMAL(MEAN,STDDEV)", "contents": "NORMAL($1,$2)" },
                { "trigger": "PI 3.14159265359", "contents": "PI" },
                { "trigger": "POLY(x,A0,A1,A2[,A3,A4])", "contents": "POLY($1,$2,$3,$4)" },
                { "trigger": "POWER(x,Y)", "contents": "POWER($1,$2)" },
                { "trigger": "RANDBINOMIAL(N,P)", "contents": "RANDBINOMIAL($1,$2)" },
                { "trigger": "RANDLINEAR(LOW,SLOPE,HIGH)", "contents": "RANDLINEAR($1,$2,$3)" },
                { "trigger": "RANDTRIANGLE(LOW,MID,HIGH)", "contents": "RANDTRIANGLE($1,$2,$3)" },
                { "trigger": "ROUND(x[,DECPL])", "contents": "ROUND($1)" },
                { "trigger": "RPOWER(x,y)", "contents": "RPOWER($1,$2)" },
                { "trigger": "SIGMOID(x)", "contents": "SIGMOID($1)" },
                { "trigger": "SIGN(x)", "contents": "SIGN($1)" },
                { "trigger": "SIGNPOWER(x,Y)", "contents": "SIGNPOWER($1,$2)" },
                { "trigger": "SIN(x)", "contents": "SIN($1)" },
                { "trigger": "SINH(x)", "contents": "SINH($1)" },
                { "trigger": "SLEXP(x[,SP])", "contents": "SLEXP($1)" },
                { "trigger": "SLLOG10(x[,SP])", "contents": "SLLOG10($1)" },
                { "trigger": "SLREC(x[,SP])", "contents": "SLREC($1)" },
                { "trigger": "SQEXP(x[,SP])", "contents": "SQEXP($1)" },
                { "trigger": "SQLOG10(x[,SP])", "contents": "SQLOG10($1)" },
                { "trigger": "SQR(x)", "contents": "SQR($1)" },
                { "trigger": "SQREC(x[,SP])", "contents": "SQREC($1)" },
                { "trigger": "SQRT(x)", "contents": "SQRT($1)" },
                { "trigger": "TAN(x)", "contents": "TAN($1)" },
                { "trigger": "TANH(x)", "contents": "TANH($1)" },
                { "trigger": "TRUNC(x)", "contents": "TRUNC($1)" },
                { "trigger": "UNIFORM(LOW,HIGH)", "contents": "UNIFORM($1,$2)" },
                { "trigger": "UNIFORMINT(LOW,HIGH)", "contents": "UNIFORMINT($1,$2)" },
                { "trigger": "VCPOWER(x,Y)", "contents": "VCPOWER($1,$2)" },
                { "trigger": "IFTHEN", "contents": "IFTHEN($1,$2,$3)" },
                { "trigger": "PROD", "contents": "PROD($1,$2)" },
                { "trigger": "SMAX", "contents": "SMAX($1,$2)" },
                { "trigger": "SMIN", "contents": "SMIN($1,$2)" },
                { "trigger": "SUM", "contents": "SUM($1,$2)" },
//Special values
                "INF",
                "NA",
                "EPS",
                "UNDF",
                "YES",
                "NO",
//Other                 
                { "trigger": "ORD(set)", "contents": "ORD(${1:set})" },
                { "trigger": "CARD(set)", "contents": "CARD(${1:set})" },
                { "trigger": "$INCLUDE filename", "contents": "\\$INCLUDE ${1:filename}" },
                { "trigger": "$ONTEXT", "contents": "\\$ONTEXT" },
                { "trigger": "$ONTEXT ... $OFFTEXT", "contents": "\\$ONTEXT\n${1:comment}\n\\$OFFTEXT" },
                { "trigger": "$OFFTEXT", "contents": "\\$OFFTEXT $0" },
                { "trigger": "$ONECHO > filename", "contents": "\\$ONECHO > ${1:filename}\n${2:filecontent}\n\\$OFFECHO;" },
                { "trigger": "$OFFECHO", "contents": "\\$OFFECHO;" },
                { "trigger": "LOOP(set,instructions);", "contents": "LOOP(${1:set},\n${2:instructions}\n);" },
                { "trigger": "ABORT", "contents": "ABORT\\$($1) '$2';" },
                { "trigger": "EXECUTE_UNLOAD", "contents": "EXECUTE_UNLOAD '$0';" },
                "DISPLAY $0;"


        ]
}